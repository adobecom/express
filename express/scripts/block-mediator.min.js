const BlockMediator=(()=>{const o={};const a=c=>{o[c]={callbacks:[],value:undefined}};const n=c=>c in o;const c=()=>Object.keys(o);const r=c=>o[c]?.value;const t=(c,t)=>{if(!n(c)){a(c)}const s=r(c);o[c].value=t;const e=[];for(const l of o[c].callbacks){try{l({oldValue:s,newValue:t})}catch(c){e.push(c)}}return e};const s=(c,t)=>{if(!n(c)){a(c)}const s=o[c];if(s.callbacks.includes(t))return()=>{};s.callbacks.push(t);const e=()=>{s.callbacks=s.callbacks.filter(c=>c!==t)};return e};return{hasStore:n,listStores:c,get:r,set:t,subscribe:s}})();export default BlockMediator;
